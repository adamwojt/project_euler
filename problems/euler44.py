#_______Description_____

#https://projecteuler.net/problem=44
#Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
#1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
#It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
#Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
##_______end_description_____:
import time
start_time = time.time()


def find_penta(): 
    penta_set=set()
    penta_list=[]
    for i in range(1,2500,1): #range approx
        pentan=i*(3*i-1) / 2 #calculate pentagon number
        for i in penta_list: #loop through exsisting
            pentaj = pentan - i #
            pentak = pentaj-i
            if pentaj in penta_set and pentak in penta_set: print(pentak) ;return int(pentak) #check if both are penta.
        penta_list.append(pentan) #add new
        penta_set.add(pentan)        #add

find_penta()       
end_time=time.time()-start_time
print(end_time)
